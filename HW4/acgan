
if not os.path.exists('Results/Loss_Data'):
       os.makedirs('Results/Loss_Data')
np.save('Results/Loss_Data/ACGAN_GLoss', GenLoss) 
np.save('Results/Loss_Data/ACGAN_DLoss', DiscLoss)

GenLoss = np.load('Results/Loss_Data/ACGAN_GLoss.npy')
DiscLoss = np.load('Results/Loss_Data/ACGAN_DLoss.npy')

plt.figure(figsize=(10,5))
plt.title("Generator and Discriminator Loss During Training")
plt.plot(GenLoss,label="Gen")
plt.plot(DiscLoss,label="Disc")
plt.xlabel("iterations")
plt.ylabel("Loss")
plt.legend()
plt.savefig('Results/LOSS.pdf',
            format='pdf',
            dpi=100,
            bbox_inches='tight')
plt.show()

# Grab a batch of real images from the dataloader
real_batch = next(iter(dataloader))

# Plot the real images
plt.figure(figsize=(15,15))
plt.subplot(1,2,1)
plt.axis("off")
plt.title("Real Images")
plt.imshow(np.transpose(utils.make_grid(real_batch[0].to(device)[:10], nrow=5, padding=5, normalize=True).cpu(), (1, 2, 0)))

# Plot the fake images from the last epoch
plt.subplot(1,2,2)
plt.axis("off")
plt.title("Fake Images")
plt.imshow(np.transpose(img_list[-1],(1,2,0)))
plt.savefig('Results/WGANGP_BEST_FAKE_32.pdf',
            format='pdf',
            dpi=100,
            bbox_inches='tight')
plt.show()
